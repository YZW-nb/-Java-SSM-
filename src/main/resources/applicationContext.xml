<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--配置读取db.properties配置文件-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--配置扫描Service mall-->
    <context:component-scan base-package="com.java"/>
    <!--**************************数据库相关配置**************************-->
    <!--数据库相关配置-->
    <!--配置数据源-->
<!--    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
<!--        <property name="driverClass" value="${jdbc.driver}"/>-->
<!--        <property name="jdbcUrl"     value="${jdbc.url}"/>-->
<!--        <property name="user"        value="${jdbc.username}"/>-->
<!--        <property name="password"    value="${jdbc.password}"/>-->
<!--        &lt;!&ndash; 连接池基本配置 &ndash;&gt;-->
<!--        <property name="initialPoolSize" value="5"/>-->
<!--        <property name="minPoolSize" value="5"/>-->
<!--        <property name="maxPoolSize" value="20"/>-->
<!--        <property name="acquireIncrement" value="5"/>-->

<!--        &lt;!&ndash; 连接超时配置 &ndash;&gt;-->
<!--        <property name="checkoutTimeout" value="30000"/>-->
<!--        <property name="acquireRetryAttempts" value="3"/>-->
<!--        <property name="acquireRetryDelay" value="1000"/>-->

<!--        &lt;!&ndash; 连接测试配置 &ndash;&gt;-->
<!--        <property name="idleConnectionTestPeriod" value="300"/>-->
<!--        <property name="testConnectionOnCheckout" value="false"/>-->
<!--        <property name="testConnectionOnCheckin" value="true"/>-->
<!--        <property name="preferredTestQuery" value="SELECT 1"/>-->

<!--        &lt;!&ndash; 连接池管理配置 &ndash;&gt;-->
<!--        <property name="maxIdleTime" value="1800"/>-->
<!--        <property name="maxConnectionAge" value="14400"/>-->
<!--        <property name="maxStatements" value="0"/>-->
<!--        <property name="maxStatementsPerConnection" value="50"/>-->
<!--    </bean>-->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url"             value="${jdbc.url}"/>
        <property name="username"        value="${jdbc.username}"/>
        <property name="password"        value="${jdbc.password}"/>
    </bean>


    <!--配置SqlSessionFactory 单独的MyBatis需要自己去new这个SqlSessionFactory.-->
    <!--现在和Spring 结合后交给Spring容器帮我们创建好，默认bean的单例-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--加载MyBatis核心配置文件-->
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <!--自动扫描mappers。xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
        <!--配置数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--配置Mapper扫描 -->
    <!--MapperScannerConfigurer:mapper扫描器，将包下面的mapper接口
    自动创建代理对象，自动放到Spring容器中，bean
    的id就是mapper的类名（首字母小写） -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.java.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    <!--************************事务相关配置************************-->
    <!--<！——事务管理器——>-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--数据源，事物的操作与数据库相关，如果发现异常需要回滚数据-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--    <传播行为-—>-->
            <tx:method name="*" propagation="REQUIRED"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="delete" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="create*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:advisor advice-ref="txAdvice"
                     pointcut="execution(* com.java.service.imp.*.*(..))"/>
    </aop:config>
</beans>